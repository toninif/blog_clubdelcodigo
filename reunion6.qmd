---
title: "Sexta Reunión"
bibliography: biblio.bib
csl: apa.csl
---

```{r}
#| echo: false
#| eval: true
#| warning: false

library(tidyverse) # Manejo de datos

library(apaTables) # Tablas formato apa

library(rempsyc) # Tablas en formato apa

library(report) # Para trabajar junto a rempsyc

library(readxl) # Para leer datos de excel
```

## Haciendo tablas con R

## Datos

```{r datos}
#| echo: true
#| eval: true
#| warning: false

datos <- read_excel("datos/argentina_esp.xlsx") # Asi cargamos los datos


datos %>% glimpse() # Le damos un primer vistazo a los datos 

```

### Ordenando un poco...

```{r datos_orden}
#| echo: true
#| eval: true
#| warning: false


datos_ordenados <- datos %>% 
  select(set, pais, starts_with(c("valencia", "arousal", "dominancia"))) %>% # Con esto selecciono todas las que arrancon con "texto"
  mutate(
    pais_factor = as_factor(pais)
  ) %>% 
  relocate(
    c("pais_factor", "pais"), .after = dominancia_DE_general # Acomodo dos variables
  )

# Esta es una manera de hacer tablas.
# Usar la función kable de knitr (que es el paquete
# que renderea el documento)

knitr::kable(head(datos_ordenados))  

```

Una vez que tenemos los datos que queremos ya podemos generar la tabla. Hay muchas opciones para generar tablas. Una de estas opciones es generarla "a mano". Tendriamos que hacer las correlaciones y luego incrustar los resultados en cada seccion de una tabla.

Veamos:

Para crear la tabla se utiliza markdown. Lo que se debe hacer es lo siguiente:

    | Col1 | Col2 | Col3 |
    |------|------|------|
    |      |      |      |
    |      |      |      |
    |      |      |      |

### Luego se llevan a cabo las correlaciones

```{r correlaciones}

# El paquete correlation esta muy bueno para este analisis

correlation::correlation(datos_ordenados) 

```

Y lo que restaría seria armar la tabla resultado por resultado. El problema de esto es que no es muy reproducible que digamos, es tedioso y puede llevarnos a cometer errores.

## ApaTables

Entonces, una de las opciones que podemos utilizar para evitar lo de arriba es el paquete `apaTables` [@tablasAPA1]. Este paquete genera tablas en formato apa luego de realizar la estadística.

Para utilizarlo, primero lo instalamos (Si ya lo tienen, entonces omitir esto)

```{r instalar}
#| echo: false
#| eval: false
#| warning: false

install.packages("apaTables")
```

Luego lo cargamos

```{r cargar}
#| echo: false
#| eval: false
#| warning: false

library(apaTables)
```

Ahora si podemos generar nuestra tabla de correlaciones.

```{r correlaciones2}
#| echo: false

valencia_arg <- datos_ordenados %>% 
  filter(pais_factor == "arg" & set == 1) %>% 
  select(pais_factor, valencia_media_general, arousal_media_general) %>% 
  rename(valencia_argentina = valencia_media_general,
         arousal_argentina = arousal_media_general)

valencia_esp <- datos_ordenados %>% 
  filter(pais_factor == "esp" & set == 3) %>% 
  select(pais_factor, valencia_media_general, arousal_media_general) %>% 
  rename(valencia_esp = valencia_media_general,
         arousal_esp = arousal_media_general)

valencia_pais <- bind_cols(valencia_arg, valencia_esp) %>% select(-contains("pais"))

# apa.cor.table(data = valencia_pais, filename = "resultados/mitabla3.doc", landscape = T)

```

Si vamos al archivo...

![](imgagenes/tablaEj.png){fig-align="center"}

## Paquete rempsyc

```{r diff}

modelo_Dif <- nice_t_test(data = datos_ordenados,
                                 response = "arousal_media_general",
                                 group = "pais_factor",
                                 warning = FALSE)

#nice_table(modelo_Dif)

```

![](imgagenes/nice_tabla.png){fig-align="center"}

### Integrado con el paquete report

```{r diff2}

modelo_diferencias <- t.test(arousal_media_general ~ pais_factor, datos_ordenados)

modelo_diferencias

tabla_diferencias <- as.data.frame(report(modelo_diferencias))

tabla_diferencias %>% rename("Media España" = Mean_Group1,
                             "Media Argentina" = Mean_Group2,
                             Respuesta = Parameter,
                             Grupo = Group) %>% 
  select(-Difference) %>% 
  nice_table(., report = "t.test", short = T) %>% 
  flextable::save_as_docx(., path = "resultados/t-tests.docx")

```

**Si vamos al archivo...**

![](imgagenes/t_test_tabla.png){fig-align="center"}
