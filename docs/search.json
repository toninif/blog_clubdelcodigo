[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Sobre el club",
    "section": "",
    "text": "La idea es que podamos reunirnos para comenzar a programar usando R y RStudio. Si bien al principio vamos a ver temas muy introductorios, a medida de que avancen las reuniones se van a poner tocar temas m√°s complejos y que est√©n relacionados con sus √°reas de inter√©s.\nOtra de mis intenciones es que esta pagina (ac√° o en otro lado) se actualice conforme vayamos reuni√©ndonos, as√≠ pueden tener un lugar donde volver a ver lo que charlamos en cada juntada. O mismo si quieren compartir el contenido, sepan que esto es para cualquiera que tenga un m√≠nimo de inter√©s, as√≠ que si√©ntanse libres de compartir :)"
  },
  {
    "objectID": "about.html#indice",
    "href": "about.html#indice",
    "title": "Sobre el club",
    "section": "Indice",
    "text": "Indice\n\nLink a la reuni√≥n de cada Jueves\n\n\n\n\nT√≥pico\nReuniones\n\n\n\n\nArrancando con R - RStudio y Proyectos\nReuni√≥n 1\n\n\nCrear primer Proyecto y Reporte Reproducible\nReuni√≥n 2\n\n\nManejo de datos: dplyr\nReunion 3\n\n\nTrabajando con referencias\nReunion 4\n\n\nA graficar!! üöß üöß üöß (En desarrollo) üöß üöß üöß\nReunion 5\n\n\nVarios\nRecursos"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog del Club",
    "section": "",
    "text": "opinion\n\n\nclub\n\n\n\n\n\n\n\n\n\n\n\nDec 5, 2022\n\n\nParticipante, CdC\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/nueva-seccion/index.html",
    "href": "posts/nueva-seccion/index.html",
    "title": "Pr√≥ximamente",
    "section": "",
    "text": "Con la migraci√≥n forzada de la web, se me ocurri√≥ agregar un secci√≥n tipo blog donde se puedan ir agregando post que escribamos. Tal vez a modo de experiencias o comentando algo nuevo que aprendimos"
  },
  {
    "objectID": "recursos.html",
    "href": "recursos.html",
    "title": "Recursos",
    "section": "",
    "text": "El link de arriba lleva al repositorio del club. Ah√≠ van a poder encontrar ejemplos de c√≥digo comentado. Lo importante es tener un recurso que se pueda leer en espa√±ol y en R.\n\n\n\n\n\n\nSobre comentar\n\n\n\n\n\nEs una muy buena pr√°ctica comentar nuestro c√≥digo. Muy pocos comentarios pueden no ser suficientes para explicar todo el programa. Muchos comentarios pueden ser contraproducentes para entender el programa. Lo importante es encontrar el balance y poder comentar cada vez un poquito mejor.\n\n\n\n\nbibliometrix\n\nEn este caso bibliometrix es un paquete para bibliometr√≠a. En pocas palabras los paquetes son conjuntos de funciones y se instalan asi install.packages(\"nombre del paquete\").\n\ninstall.packages(\"bibliometrix\")\n\nlibrary(bibliometrix)\n\nEsto se hace una sola vez. Una vez instalados, cada vez que iniciemos R vamos a tener que ‚Äúllamar‚Äù o cargar los paquetes que necesitemos. Eso lo hacemos con la funci√≥n library.\n\n\n\n\n\n\nClick para expandir\n\n\n\n\n\nPodemos pensar install.packages y library como si fueran cosas para la casa. En este sentido, cuando la casa se esta construyendo se hace la instalaci√≥n de las tuber√≠as de agua. Es decir se instala el agua (install.packages()). Una vez instalada, se pueden usar las canillas para abrir y cerrar el agua. En este sentido, activar el agua seria como activar un paquete library()\n\n\n\n\nsynthpop\n\nEste es un paquete que nos va a dar las herramientas necesarias para generar datos ‚Äúsint√©ticos‚Äù. Es decir, datos que no son los originales, pero que al analizarlos podemos llegar a los mismos resultados. Esto es util para aquellos casos en los que no se puede compartir los datos originales (E. datos sensibles).\nSe instala de la siguiente manera. Una vez instalado se lo carga utilizando la funci√≥n library()\n\ninstall.packages(\"synthpop\")\n\nlibrary(synthpop)\n\nVideotutorial sobre como se usa synthpop"
  },
  {
    "objectID": "reunion1.html",
    "href": "reunion1.html",
    "title": "Club~Del~C√≥digo",
    "section": "",
    "text": "Click para expandir\n\n\n\n\n\nEs importante siempre tener en cuenta que sistema operativo tenemos en nuestra computadora.\n\n\n\nEs importante instalar R y RStudio porque de lo contrario algunos paquetes que usemos podr√≠an no instalarse bien o directamente no instalarse. Entonces:\n\nDescargar e instalar R (base R). Para eso abrir este link y elegir cualquiera de las opciones. Yo por ejemplo eleg√≠ el mirror de la plata\n\n\n\n\n\n\n\nDescargar e instalar RStudio. Para eso abrir este link\n\n\n\n\n\n\n\n\n\nRStudio es un entorno de desarrollo integrado (IDE) para el lenguaje de programaci√≥n R, dedicado a la programaci√≥n estad√≠stica y a la visualizaci√≥n de datos entre otras cosas. En si, RStudio proporciona un editor incorporado, funciona en todas las plataformas (incluyendo en servidores) y proporciona muchas ventajas, como la integraci√≥n con version control y gesti√≥n de proyectos.\nLo primero que van a ver\nCuando abra RStudio por primera vez, van a ver tres paneles (toooodo esto se puede modificar):\n\nLa consola/Terminal R interactiva\nEntorno/Historial/Conexiones\nArchivos/Gr√°ficos/Paquetes/Ayuda/Viewer\n\n\n\n\n\n\nSecci√≥n de Archivos/Gr√°ficos/Paquetes/Ayuda\nEn esta secci√≥n se presentan todos los archivos, carpetas, datos que tengamos en nuestro proyecto. Ac√° vamos a poder crear carpetas, modificar nombres, mover archivos etc. En la pesta√±a de Archivos, un proyecto b√°sico se ve de la siguiente manera:\n\n\n\n\n\nEl resto de pesta√±as estar√°n compuestas por aquello que indique su nombre. En la pesta√±a Plots/Gr√°ficos podremos ver los gr√°ficos que generemos, en la pesta√±a Paquetes veremos los paquetes que tenemos instalados y que est√©n (o no) cargados en ese momento y en la pesta√±a Help/Ayuda encontraremos gran parte de la documentaci√≥n de los paquetes y de las funciones que necesitemos.\nEl entorno\nEn el entorno global se listaran todos los objetos que vayamos creando, ya sean bases de datos, variables, en si todo las cosas que estemos manejando en ese momento. Ademas de mostrarnos todos nuestros objetovs, tambi√©n vamos a obtener informaci√≥n del tipo (numeros, cadenas de caracteres, data frame etc), su tama√±o y medida, y sobre aquello que contiene. En el caso del data.frame se puede ver que es una base con dos variables (columnas) y 5 filas (observaciones)\n\n\n\n\n\nLa consola\nLa consola de R aparece en el cuadro inferior izquierdo apenas abrimos RStudio y corresponde al entorno computacional de este lenguaje. En pocas palabras, todo el codigo que escribimos es interpretado en la consola. Podemos escribir c√≥digo directamente en la consola y R nos dar√° el resultado de lo pidamos all√≠ mismo.\nPor ejemplo, en la imagen de abajo vemos que podemos pedirle a R que calcule la media de una serie de n√∫meros que va del 1 al 20 (mean(1:20)) y R nos arroja el resultado. Todo esto en la misma consola.\n\n\n\n\n\nComo dijimos, la consola interpreta todo el c√≥digo que escribamos o le enviemos desde nuestro script (m√°s abajo vemos esto). Tambi√©n la consola va a ir registrando todo lo que le enviemos. Por ejemplo, ahora le pedimos que calcule el desvi√≥ est√°ndar de la misma serie de n√∫meros del ejemplo anterior sd(1:20)\n\n\n\n\n\nOtro aspecto importante de la consola es que te informa la versi√≥n de R que estamos utilizando (1), en donde estamos trabajando (2) y si actualmente se encuentra interpretando c√≥digo\n\n\n\n\n\nPor ultimo, lo cabe destacar que la consola se reiniciara cada vez que cerremos y abramos RStudio. Por lo que es importante no trabajar constantemente en esta secci√≥n. Lo mejor es crear un nuevo archivo .R y trabajar ahi. En un archivo .R podremos volver a nuestro c√≥digo, siempre y cuando guardemos nuestro archivo antes de cerrar el programa.\n\n\n\n\n\n\n\n\n(cargar video de creacion de proyectos)\n\n\n\n\n\n\nClick para expandir\n\n\n\n\n\nFile -> New Project -> New Directory -> New Project Ahi ponemos nombre del proyecto y elejimos donde se va a crear\n\n\n\nEstructura b√°sica de un proyecto\n\n\n\n\n\nEn nuestro RStudio‚Ä¶"
  },
  {
    "objectID": "reunion2.html",
    "href": "reunion2.html",
    "title": "Club~Del~C√≥digo",
    "section": "",
    "text": "Ahora hablando en serio: esta reuni√≥n se hablo mucho as√≠ que demanda bastante tiempo pasarla a papel (o archivo .qmd :p)"
  },
  {
    "objectID": "reunion3.html",
    "href": "reunion3.html",
    "title": "Tercera Reunion",
    "section": "",
    "text": "El manejo de datos (carga, limpieza, orden, visualizaci√≥n, modelado, ver imagen de abajo) es una de las tareas a las que mayor tiempo le dedicaremos cuando estemos trabajando con R. Uno de los paquetes m√°s utilizados para llevar adelante esta tarea es dplyr. Este paquete forma parte del tidyverse y contiene una serie de funciones que nos dejaran seleccionar, renombrar, filtrar, re-acomodar y resumir las variables de nuestra base de datos. Conviene pensar en dplyr como una gram√°tica para el manejo de datos.\n\n\n\n\n\n\n\nAca la realidad es que se pueden utilizar todo tipo de bases de datos. Se podr√≠an usar las bases que vienen en el mismo R como por ejemplo iris o tambi√©n la base de pinguinos del paquete palmerpenguins. Esas bases siempre las tendremos a disposici√≥n. Sin embargo hoy vamos a trabajar con algunas funciona de dplyr utilizando una base con datos bibliom√©tricos que fue generada utilizando la herramienta Constellate de jstor. Esta base es bastante cercana a lo que podriamos conseguir en ‚Äúel mundo real‚Äù porque tiene datos faltantes, esta re desordanada, tiene malos nombres de variables etc‚Ä¶\nPara acceder a los datos podemos hacer click aca o directamente entrar al repositorio y descargarlos manualmente: https://osf.io/bwdvy/?view_only=\nUna vez descargados los datos es conveniente guardarlos en la carpeta datos de nuestro proyecto.\nOtra opci√≥n es ejecurtar este codigo. De esta manera la funcion dowload.file tomara la url que ingresemos, desgarcar√° el archivo y lo guardar√° donde le indiquemos. En este caso en la carpeta datos de nuestro proyecto\n\n\n\n\n\n\nATENCI√ìN!!\n\n\n\n\n\nPara que esto funcione ya debemos tener creada la carpeta datos en nuestro proyecto\n\n\n\n\ndownload.file(url = \"https://osf.io/download/cp2kz\", # URL donde esta el archivo a descargar\n              destfile = \"datos/datos_cdc.csv\") # carpeta donde se guardara el archivo\n\nlibrary(readr) # Para leer datos\ndatos_cdc <- read_csv(\"datos/datos_cdc.csv\") # Funcion para leer datos csv (separados por coma)\n\nglimpse() # Esto es para darle un vistazo a la base\n\n\n\n\nPodemos pensar el manejo de datos con dplyr como si las funciones del paquete fueran verbos. Cuales son esos verbos?\n\n\n\n\n\n\n\n\nVerbo\nFunci√≥n\nDescripci√≥n\n\n\n\n\nFiltrar\nfilter()\nEsta funci√≥n maneja los datos seg√∫n sus filas. Lo que hace es filtrar datos seg√∫n la l√≥gica que le indiquemos.\n\n\nSeleccionar\nselect()\nEsta funciona maneja los datos seg√∫n las columnas. Lo que hace es seleccionar (o tambi√©n quitar) variables (columnas de nuestra base de datos)\n\n\nCrear\nmutate()\nEsta funci√≥n tambi√©n modifica columnas y lo que hace es crear variables nuevas.\n\n\nOrdenar\narrange()\nEsta funci√≥n maneja seg√∫n las filas de alguna columna seleccionada. Lo que hace es ordenar la base de datos de menor a mayor (o viceversa) segun los datos de una variable. B√°sicamente es como el bot√≥n de Ordenar y Filtrar de excel.\n\n\nAcomodar\nrelocate()\nEsta funci√≥n tambi√©n trabaja con columnas y lo que hace es re-ordenarlas. Emula lo que com√∫nmente se hace con el mouse. Indicamos que variables queremos mover y hacia donde.\n\n\nRenombrar\nrename()\nEsta funci√≥n trabaja con columnas y lo que hace es renombrarlas. El orden es: nombre nuevo = nombre viejo\n\n\nResumir\nsummarise()\nEsta funci√≥n genera un resumen de nuestros datos ya sean generales o agrupados utilizando la funci√≥n de abajo group_by()\n\n\nAgrupar\ngroup_by()\nEsta funci√≥n agrupa los datos seg√∫n una variable categ√≥rica en particular.\n\n\n\nLa manera de utilizar estas herramientas es bastante simple. Se escribe la funci√≥n que necesitemos, se indican los datos en los que vamos a trabajar y luego se indica aquello que necesitemos hacer.\n\n\n\nlibrary(tidyverse)\n\nPseudocodigo\n\nfuncion(datos, lo que necesitamos)\n\nPseudocodigo con un objetivo m√°s claro\n\nfiltrar(datos, variable mayor que 1)\n\nCodigo para alcanzar el objetivo\n\nfilter(.data = starwars, height > 175) # En este caso solo necesito aquellos datos de quienes tengan una altura mayor a 175 cm\n\n# A tibble: 48 √ó 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Darth V‚Ä¶    202 136   none       white      yellow          41.9 male  mascu‚Ä¶\n 2 Owen La‚Ä¶    178 120   brown, gr‚Ä¶ light      blue            52   male  mascu‚Ä¶\n 3 Biggs D‚Ä¶    183  84   black      light      brown           24   male  mascu‚Ä¶\n 4 Obi-Wan‚Ä¶    182  77   auburn, w‚Ä¶ fair       blue-gray       57   male  mascu‚Ä¶\n 5 Anakin ‚Ä¶    188  84   blond      fair       blue            41.9 male  mascu‚Ä¶\n 6 Wilhuff‚Ä¶    180  NA   auburn, g‚Ä¶ fair       blue            64   male  mascu‚Ä¶\n 7 Chewbac‚Ä¶    228 112   brown      unknown    blue           200   male  mascu‚Ä¶\n 8 Han Solo    180  80   brown      fair       brown           29   male  mascu‚Ä¶\n 9 Jek Ton‚Ä¶    180 110   brown      fair       blue            NA   male  mascu‚Ä¶\n10 Boba Fe‚Ä¶    183  78.2 black      fair       brown           31.5 male  mascu‚Ä¶\n# ‚Ä¶ with 38 more rows, and 5 more variables: homeworld <chr>, species <chr>,\n#   films <list>, vehicles <list>, starships <list>\n\nfilter(.data = starwars, species == \"Wookiee\") # En este caso solo necesito los datos de quienes sean de la especie Wookiee\n\n# A tibble: 2 √ó 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n1 Chewbacca    228   112 brown      unknown    blue             200 male  mascu‚Ä¶\n2 Tarfful      234   136 brown      brown      blue              NA male  mascu‚Ä¶\n# ‚Ä¶ with 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n\n\n\n\n\nPseudocodigo\n\nseleccionar(datos, variable(s) de interes)\n\nC√≥digo\n\nselect(.data = starwars, c(name, height, mass, gender)) # En este caso solo me interesaban las variables nombre, altura, masa y genero\n\n# A tibble: 87 √ó 4\n   name               height  mass gender   \n   <chr>               <int> <dbl> <chr>    \n 1 Luke Skywalker        172    77 masculine\n 2 C-3PO                 167    75 masculine\n 3 R2-D2                  96    32 masculine\n 4 Darth Vader           202   136 masculine\n 5 Leia Organa           150    49 feminine \n 6 Owen Lars             178   120 masculine\n 7 Beru Whitesun lars    165    75 feminine \n 8 R5-D4                  97    32 masculine\n 9 Biggs Darklighter     183    84 masculine\n10 Obi-Wan Kenobi        182    77 masculine\n# ‚Ä¶ with 77 more rows\n\nseleccion1 <- select(.data = starwars, c(name, height, mass, gender))\n\nselect(.data = seleccion1, -height) # En este caso se puede usar el select para quitar una variable. Eso se hace usando un - antes de la variable que queremos quitar.\n\n# A tibble: 87 √ó 3\n   name                mass gender   \n   <chr>              <dbl> <chr>    \n 1 Luke Skywalker        77 masculine\n 2 C-3PO                 75 masculine\n 3 R2-D2                 32 masculine\n 4 Darth Vader          136 masculine\n 5 Leia Organa           49 feminine \n 6 Owen Lars            120 masculine\n 7 Beru Whitesun lars    75 feminine \n 8 R5-D4                 32 masculine\n 9 Biggs Darklighter     84 masculine\n10 Obi-Wan Kenobi        77 masculine\n# ‚Ä¶ with 77 more rows\n\nselect(.data = starwars, starts_with(\"h\"))\n\n# A tibble: 87 √ó 3\n   height hair_color    homeworld\n    <int> <chr>         <chr>    \n 1    172 blond         Tatooine \n 2    167 <NA>          Tatooine \n 3     96 <NA>          Naboo    \n 4    202 none          Tatooine \n 5    150 brown         Alderaan \n 6    178 brown, grey   Tatooine \n 7    165 brown         Tatooine \n 8     97 <NA>          Tatooine \n 9    183 black         Tatooine \n10    182 auburn, white Stewjon  \n# ‚Ä¶ with 77 more rows\n\n\n\n\n\nPseudocodigo\n\ncrear(datos, variable(s) que necesito crear = contenido)\n\nC√≥digo\n\nmutate(.data = seleccion1, altura = height/100) # En este caso vamos a crear una nueva variable que contenta la transformacion de height de centimetros a metros\n\n# A tibble: 87 √ó 5\n   name               height  mass gender    altura\n   <chr>               <int> <dbl> <chr>      <dbl>\n 1 Luke Skywalker        172    77 masculine   1.72\n 2 C-3PO                 167    75 masculine   1.67\n 3 R2-D2                  96    32 masculine   0.96\n 4 Darth Vader           202   136 masculine   2.02\n 5 Leia Organa           150    49 feminine    1.5 \n 6 Owen Lars             178   120 masculine   1.78\n 7 Beru Whitesun lars    165    75 feminine    1.65\n 8 R5-D4                  97    32 masculine   0.97\n 9 Biggs Darklighter     183    84 masculine   1.83\n10 Obi-Wan Kenobi        182    77 masculine   1.82\n# ‚Ä¶ with 77 more rows\n\n\n\n\n\n\n\n\nA tener en cuenta!\n\n\n\n\n\nCuando usemos mutate() con una variable que ya existe en el dataset conviene no sobreescribirla. Esto afectar√≠a la reproducibilidad del c√≥digo. Lo mejor es generar una nueva variable con alg√∫n identificador.\nPor ejemplo: Cuando cargamos el dataset vemos que la variable de agrupaci√≥n gender es de tipo chr y lo que necesitamos es que sea un factor. En ese caso se har√≠a lo siguiente:\n\nmutate(.data = seleccion1, gender_fct = as_factor(gender)) # Nos quedan ambas variables y solo utilizamos la que necesitemos\n\n# A tibble: 87 √ó 5\n   name               height  mass gender    gender_fct\n   <chr>               <int> <dbl> <chr>     <fct>     \n 1 Luke Skywalker        172    77 masculine masculine \n 2 C-3PO                 167    75 masculine masculine \n 3 R2-D2                  96    32 masculine masculine \n 4 Darth Vader           202   136 masculine masculine \n 5 Leia Organa           150    49 feminine  feminine  \n 6 Owen Lars             178   120 masculine masculine \n 7 Beru Whitesun lars    165    75 feminine  feminine  \n 8 R5-D4                  97    32 masculine masculine \n 9 Biggs Darklighter     183    84 masculine masculine \n10 Obi-Wan Kenobi        182    77 masculine masculine \n# ‚Ä¶ with 77 more rows\n\n\n\n\n\n\n\n\nPseudocodigo\n\nordenar(datos, variable seleccionada)\n\nC√≥digo\n\narrange(.data = starwars, height) # Orden de menor a mayor\n\n# A tibble: 87 √ó 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Yoda         66    17 white      green      brown            896 male  mascu‚Ä¶\n 2 Ratts T‚Ä¶     79    15 none       grey, blue unknown           NA male  mascu‚Ä¶\n 3 Wicket ‚Ä¶     88    20 brown      brown      brown              8 male  mascu‚Ä¶\n 4 Dud Bolt     94    45 none       blue, grey yellow            NA male  mascu‚Ä¶\n 5 R2-D2        96    32 <NA>       white, bl‚Ä¶ red               33 none  mascu‚Ä¶\n 6 R4-P17       96    NA none       silver, r‚Ä¶ red, blue         NA none  femin‚Ä¶\n 7 R5-D4        97    32 <NA>       white, red red               NA none  mascu‚Ä¶\n 8 Sebulba     112    40 none       grey, red  orange            NA male  mascu‚Ä¶\n 9 Gasgano     122    NA none       white, bl‚Ä¶ black             NA male  mascu‚Ä¶\n10 Watto       137    NA black      blue, grey yellow            NA male  mascu‚Ä¶\n# ‚Ä¶ with 77 more rows, and 5 more variables: homeworld <chr>, species <chr>,\n#   films <list>, vehicles <list>, starships <list>\n\narrange(.data = starwars, desc(height)) # Orden de mayor a menor\n\n# A tibble: 87 √ó 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Yarael ‚Ä¶    264    NA none       white      yellow          NA   male  mascu‚Ä¶\n 2 Tarfful     234   136 brown      brown      blue            NA   male  mascu‚Ä¶\n 3 Lama Su     229    88 none       grey       black           NA   male  mascu‚Ä¶\n 4 Chewbac‚Ä¶    228   112 brown      unknown    blue           200   male  mascu‚Ä¶\n 5 Roos Ta‚Ä¶    224    82 none       grey       orange          NA   male  mascu‚Ä¶\n 6 Grievous    216   159 none       brown, wh‚Ä¶ green, y‚Ä¶       NA   male  mascu‚Ä¶\n 7 Taun We     213    NA none       grey       black           NA   fema‚Ä¶ femin‚Ä¶\n 8 Rugor N‚Ä¶    206    NA none       green      orange          NA   male  mascu‚Ä¶\n 9 Tion Me‚Ä¶    206    80 none       grey       black           NA   male  mascu‚Ä¶\n10 Darth V‚Ä¶    202   136 none       white      yellow          41.9 male  mascu‚Ä¶\n# ‚Ä¶ with 77 more rows, and 5 more variables: homeworld <chr>, species <chr>,\n#   films <list>, vehicles <list>, starships <list>\n\n\n\n\n\nPseudocodigo\n\nacomodar(datos, variable, antes/despues de)\n\nC√≥digo\n\nrelocate(.data = seleccion1, gender, .after = name) # En este caso acomodamos gender despues de name\n\n# A tibble: 87 √ó 4\n   name               gender    height  mass\n   <chr>              <chr>      <int> <dbl>\n 1 Luke Skywalker     masculine    172    77\n 2 C-3PO              masculine    167    75\n 3 R2-D2              masculine     96    32\n 4 Darth Vader        masculine    202   136\n 5 Leia Organa        feminine     150    49\n 6 Owen Lars          masculine    178   120\n 7 Beru Whitesun lars feminine     165    75\n 8 R5-D4              masculine     97    32\n 9 Biggs Darklighter  masculine    183    84\n10 Obi-Wan Kenobi     masculine    182    77\n# ‚Ä¶ with 77 more rows\n\nrelocate(.data = seleccion1, name, .before = mass) # En este caso acomodamos name despues de mass\n\n# A tibble: 87 √ó 4\n   height name                mass gender   \n    <int> <chr>              <dbl> <chr>    \n 1    172 Luke Skywalker        77 masculine\n 2    167 C-3PO                 75 masculine\n 3     96 R2-D2                 32 masculine\n 4    202 Darth Vader          136 masculine\n 5    150 Leia Organa           49 feminine \n 6    178 Owen Lars            120 masculine\n 7    165 Beru Whitesun lars    75 feminine \n 8     97 R5-D4                 32 masculine\n 9    183 Biggs Darklighter     84 masculine\n10    182 Obi-Wan Kenobi        77 masculine\n# ‚Ä¶ with 77 more rows\n\n\n\n\n\nPseudocodigo\n\nrenombrar(datos, nombre nuevo = nombre viejo)\n\nC√≥digo\n\nseleccion1_traducida <- rename(seleccion1,\n                               nombre = name,\n                               altura = height,\n                               masa_kg = mass,\n                               genero = gender)\n\nnames(seleccion1)\n\n[1] \"name\"   \"height\" \"mass\"   \"gender\"\n\nnames(seleccion1_traducida)\n\n[1] \"nombre\"  \"altura\"  \"masa_kg\" \"genero\" \n\n\n\n\n\n\nLos verbos que proporciona dplyr son geniales y muy faciles de utilizar, pero para todo lo que hicimos m√°s arriba se necesito una linea de codigo para cada verbo. Es decir, cada codigo era independiente del otro. Una gran funcion que permite unificar todos los verbos en un solo programa es la pipa, tuberia o lo que se dice piping.\nLes presento a ella %>% el operador del paquete magrittr. Lo que hace es tomar el resultado de una funci√≥n y pasarla a otra funci√≥n como argumento. Esto nos permite vincular una secuencia de pasos de an√°lisis. O en otras palabras, utilizar varios verbos de dplyr en un mismo programa.\nPor ejemplo: Se necesita seleccionar algunas variables, renombrarlas y crear variables que sean del tipo correcto. Por ultimo, graficar la altura seg√∫n el sexo del personaje\nSin %>%\n\npaso_1 <- select(.data = starwars, c(name, sex, gender, species, mass, height))\n\npaso_2 <- rename(.data = paso_1, nombre = name,\n                                 sexo = sex,\n                                 genero = gender,\n                                 especie = species,\n                                 masa_kg = mass,\n                                 altura = height)\n\npaso_3 <- mutate(.data = paso_2, sexo_fct = as_factor(sexo),\n                                 genero_fct = as_factor(genero),\n                                 especie_fct = as_factor(especie))\n\nggplot(data = select(paso_3, c(sexo_fct, altura, genero_fct)), mapping = aes(x = sexo_fct, y = altura)) +\n  geom_boxplot() +\n  coord_flip() +\n  theme_bw()\n\nWarning: Removed 6 rows containing non-finite values (stat_boxplot).\n\n\n\n\n\nCon %>%\n\nstarwars %>% # Selecciono los datos Y DESPUES\n  select(name, sex, gender, species, mass, height) %>% #Selecciono las variables Y DESPUES\n  rename(nombre = name, \n         sexo = sex,\n         genero = gender,\n         especie = species,\n         masa_kg = mass,\n         altura = height) %>% # Renombro las variables Y DESPUES\n  mutate(sexo_fct = as_factor(sexo),\n         genero_fct = as_factor(genero),\n         especie_fct = as_factor(especie)) %>% # Creo nuevas variables Y DESPUES\n  ggplot()+ # Grafico\n  geom_boxplot(mapping = aes(x = sexo_fct, y = altura)) +\n  coord_flip() +\n  theme_bw()\n\nWarning: Removed 6 rows containing non-finite values (stat_boxplot).\n\n\n\n\n\n\n\n\n\n\n\nAspectos a tener en cuenta!!\n\n\n\n\n\n\nMe encanto la pipa, pero es medio complicada de escribir. Si, es verdad. Para eso usamos el siguiente atajo del teclado CTRL + SHIFT + M y ya tenemos la pipa. Con un poco de practica ya sale sola.\nExiste otra pipa que fue introducida recientemente. Yo le digo el pinguinito. Es la pipa nativa de R y es as√≠ |>. En general cumple la misma funci√≥n. Yo como soy viejo y me acostumbre a usar %>% entonces sigo con esa. Ustedes usen la que mas les guste y cumpla mejor con sus objetivos. Hay debate sobre que pipa usar. Quedara para otro momento."
  },
  {
    "objectID": "reunion4.html",
    "href": "reunion4.html",
    "title": "Cuarta Reuni√≥n",
    "section": "",
    "text": "References\n\nPatil, I. (2021). Visualizations with statistical details: The ‚Äôggstatsplot‚Äô approach. Journal of Open Source Software, 6(61), 3167. https://doi.org/10.21105/joss.03167\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org"
  },
  {
    "objectID": "reunion5.html",
    "href": "reunion5.html",
    "title": "Quinta Reuni√≥n",
    "section": "",
    "text": "References\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., Fran√ßois, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., M√ºller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., ‚Ä¶ Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686"
  }
]